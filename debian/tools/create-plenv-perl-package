#! /bin/bash

VERSION=$1
MAINTAINER_FULL="Bob Kleemann <bob.kleemann@tealium>"
PACKAGE_NAME="plenv-perl-${VERSION}"
PACKAGE_DIR="plenv-perl-${VERSION}"
DEBIAN_DIR="${PACKAGE_DIR}/debian"
DATETIME=$(date -R)
#MAINTAINER_FULL="Unknow <unknown@unknown.com>"

function available-versions(){
    plenv versions | perl -nale 'print $F[0] eq q(*) ? $F[1] : $F[0]' | grep -v 'system'
}

function create-base-debian-dir() {
    mkdir -p ${DEBIAN_DIR}/source
    echo "8" > ${DEBIAN_DIR}/compat
    touch ${DEBIAN_DIR}/docs
    echo "3.0 (quilt)" > ${DEBIAN_DIR}/source/format

    cat <<CHANGELOG > ${DEBIAN_DIR}/changelog
${PACKAGE_NAME} (${VERSION}) unstable; urgency=low

  * Initial release of ${PACKAGE_NAME}

 -- ${MAINTAINER_FULL}  ${DATETIME}
CHANGELOG

    cat <<CONTROL > ${DEBIAN_DIR}/control
Source: ${PACKAGE_NAME}
Section: universe/perl
Priority: extra
Maintainer: ${MAINTAINER_FULL}
Build-Depends: debhelper (>= 8.0.0)
Standards-Version: 3.9.2
Homepage: http://perl.org
Vcs-Git: git://perl5.git.perl.org/perl.git
Vcs-Browser: http://perl5.git.perl.org

Package: ${PACKAGE_NAME}
Architecture: any
Depends: \${shlibs:Depends}, \${misc:Depends}, plenv
Description: Perl ${VERSION} binary for the plenv binary manager
 This is version ${VERSION} of Perl. Perl is a scripting language used in
 many system scripts and utilities. This version is installed and managed
 seprately from your system perl.
 . 
 
CONTROL

cat <<COPYRIGHT > ${DEBIAN_DIR}/copyright
Format: http://dep.debian.net/deps/dep5
Upstream-Name: perl
Source: http://perl.org

Files: *
Copyright: 1999 Larry Wall
License: Artistic or GPL-1+

Files: debian/*
Copyright: 2013 Gautam Dey <gautam.dey77@gmail.com>
License: GPL-2+
 This package is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.
 .
 This package is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 .
 You should have received a copy of the GNU General Public License
 along with this program. If not, see <http://www.gnu.org/licenses/>
 .
 On Debian systems, the complete text of the GNU General
 Public License version 2 can be found in "/usr/share/common-licenses/GPL-2".

License: Artistic
  /usr/share/common-licenses/Artistic

License: GPL-1+
  /usr/share/common-licenses/GPL-1

COPYRIGHT

cat <<'POSTINSTALL' > ${DEBIAN_DIR}/postinst
#!/bin/sh
# postinst script for plenv
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    /opt/plenv/bin/plenv rehash
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
POSTINSTALL

cat <<'RULES' > ${DEBIAN_DIR}/rules
#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

%:
	dh $@ 
RULES
chmod +x ${DEBIAN_DIR}/rules

}

function create-makefile() {

cat<<MAKEFILE > ${PACKAGE_DIR}/Makefile
build:
	echo "Nothing to build."

install: 
	echo "Installing to \${DESTDIR}"
	mkdir -p \${DESTDIR}/opt/plenv/versions
	rsync -aH /opt/plenv/versions/${VERSION}/ \${DESTDIR}/opt/plenv/versions/${VERSION}/
MAKEFILE

}

function create-dummy-source(){
    tar -zcvf ${PACKAGE_NAME}_${VERSION}.orig.tar.gz --exclude=.git --exclude='.*.swp' --exclude='debian' ${PACKAGE_DIR}
}

function create-debian-package(){
    create-base-debian-dir
    create-makefile
    create-dummy-source
    pushd ${PACKAGE_DIR}
    debuild --no-lintian --no-tgz-check -us -uc
    popd
}

if [ -r config.sh ]; then
    source config.sh
fi

if [ ! -n "${VERSION}" ] ; then
    echo "Version is required. Available versions are:"
    available-versions
    exit 1 
fi

available-versions | grep ${VERSION} >/dev/null
if [ $? != 0 ]; then
    echo "Version (${VERSION}) is not supported. Available versions are:"
    available-versions
    exit 2
fi

create-debian-package

